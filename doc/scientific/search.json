["#wilhelmtell Tool zur Generierung von JSON-LD-Datensätzen für die semantische Auszeichnung von Websites Dokumentation zum Praxisprojekt 2 im Master of Science in Business Administration Major Information and Data Management der Hochschule für Technik und Wirtschaft (HTW) Chur Verfasser: Hanna Kummel Stefano Monti Monika Stucki Referent: Bruno Wenk Bearbeitungszeitraum: 29. September 2017 bis 16. Februar 2018 Chur, Februar 2018 Zitiervorschlag: Kummel, Hanna; Monti, Stefano; Stucki, Monika (2018): #wilhelmtell -Tool zur Generierung von JSON-LD-Datensätzen für die semantische Auszeichnung von Websites . Studienarbeit. HTW Chur, Chur. ","Praxisprojekt „#wilhelmtell“ Inhaltsverzeichnis Abbildungsverzeichnis ........................................................................................................... ii Tabellenverzeichnis ................................................................................................................ ii Abkürzungsverzeichnis .......................................................................................................... ii 1 Einleitung ....................................................................................................................... 1 1.1 Auftrag und Zielsetzung .......................................................................................... 1 1.2 Abgrenzungen und Vorgehensweise ........................................................................ 2 1.3 Hinweise zur Dokumentation .................................................................................. 3 2 Personas und Use Case ................................................................................................... 4 2.1 Persona 1 ................................................................................................................. 4 2.2 Persona 2 ................................................................................................................. 5 2.3 Use Case .................................................................................................................. 6 3 Komponenten des Tools ................................................................................................. 7 3.1 Formular .................................................................................................................. 7 3.2 Tutorial .................................................................................................................... 7 3.3 Entwickler ................................................................................................................ 7 3.3.1 XML-Tutorial und Validator ............................................................................ 7 3.3.2 Source Code Dokumentation (JavaScript und XSLT) ..................................... 9 3.3.3 Projektdokumentation und technische Details ................................................. 9 4 Entscheidungsgrundlagen für Aufbau und Design ....................................................... 10 4.1 Entscheidungen betreffend Design ........................................................................ 10 4.2 Verwendete TechnologienavaScript ....................................................................................................... 12 4.2.6 JSON-LD ........................................................................................................ 13 4.3 Technische Details ................................................................................................. 13 Kummel, Monti, Stucki i ","Praxisprojekt „#wilhelmtell“ 4.3.1 Browser-Support ............................................................................................ 13 4.3.2 Serverseitige Tasks (PHP) .............................................................................. 13 4.3.3 Besonderheiten des Formulars ....................................................................... 14 5 Ergebnis des Projektes ................................................................................................. 15 5.1 Zielerreichung „Anforderungen aus Nutzersicht“ ................................................. 15 5.2 Zielerreichung „Anforderungen aus Entwicklersicht“ .......................................... 15 6 Erweiterungsideen und Empfehlungen ........................................................................ 16 6.1 Funktionale Erweiterungen ................................................................................... 16 6.2 Ideen für Design-Optimierungen ........................................................................... 16 6.3 Empfehlungen für die Dokumentation .................................................................. 16 7 Reflexion des Projektes und Ausblick .......................................................................... 17 8 Quellenverzeichnis ....................................................................................................... 18 9 Abgabeverzeichnis ....................................................................................................... 18 10 Anhang ......................................................................................................................... 19 Anhang A – Komponenten des Tools ............................................................................... 19 Anhang B – Erste Entwürfe ............................................................................................. 19 Anhang C – xxx ............................................................................................................... 21 Abbildungsverzeichnis Abbildung 1: Phasenplanung für die Umsetzung des Tools #wilhelmtell (eigene Darstellung) 3 Abbildung 2: Erstellen von JSON-LD-Code via Formular 6 Abbildung 3: Skizze des Aufbaus der Website 10 Abbildung 4: Definition Projektelemente und Zuordnung EN/PRO 19 Tabellenverzeichnis Tabelle 1: Konkrete Zielsetzung für das Tool #wilhelmtell 2 Tabelle 2: Persona 1 - Martha Brinner 5 Tabelle 3: Persona 2 - Räto Tschupp 6 ii Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ Abkürzungsverzeichnis HTML Hypertext Markup Language HTW Hochschule für Technik und Wirtschaft IE Internet Explorer JS JavaScript JSON-LD JavaScript Object Notation for Linked Data XML Extensible Markup Language XSD XML Schema Definition XSL Extensible Stylesheet Language XSLT XSL Transformation Kummel, Monti, Stucki iii ","Praxisprojekt „#wilhelmtell“ 1 Einleitung In der Schweiz bieten viele Bibliotheken neben dem klassischem Buchverleih weitere Zusatzdienstleistung wie das Veranstalten von eigenen Events an. Diese Veranstaltungen werden von den Bibliotheken auf ihren eigenen Websites angeboten, einen bibliotheksübergreifenden Veranstaltungskalender gibt es jedoch nicht. Dies soll durch ein Praxisprojekt im Masterstudiengang Information and Data Management an der HTW Chur geändert werden. Der Auftraggeber Prof. Dr. Bruno Wenk hat hierfür ein Konzept zur Realisierung eines zentralen Veranstaltungskalenders erarbeitet. Das Konzept fusst auf den Grundsätzen des „Semantic Web“, bei dem Anbieter von Daten (Bibliotheken) diese mit Metainformation anreichern und als maschinenlesbares Format im Internet bereitstellen. Daraufhin können automatisierte „Web-Crawler“ (zentraler Veranstaltungskalender) diese Daten regelmässig abgreifen und weiterverarbeiten. Dateiformat und Schema wurden auf JSON-LD Format nach schema.org Definition festgelegt. Die Erstellung der JSON-LD Daten soll dabei für das Bibliothekspersonal möglichst einfach sein. In den nachfolgenden Abschnitten werden Auftrag und Ziele genauer definiert, die gewählte Vorgehensweise beschrieben sowie die festgelegten Phasen im Projektverlauf erläutert. Die User Stories im zweiten Kapitel sollen insbesondere den Anwendungsrahmen und die Zielgruppen genauer aufzeigen. Das dritte Kapitel befasst sich einerseits mit den Komponenten, welche das Tool beinhalten soll, andererseits werden die genutzten Technologien für die Prozessschritte festgehalten und erklärt. Kapitel vier zeigt den Stand des Tools bei Abschluss des Projektes auf und bietet damit einen Überblick, was konkret vorhanden ist. Bevor im sechsten Kapitel das Projekt reflektiert und ein Blick in die Zukunft geworfen wird, sollen bereits in Kapitel fünf erste Handlungsempfehlungen und Ideen für die Weiterentwicklung des Tools konkretisiert werden. 1.1Auftrag und Zielsetzung Ausgangslage für das Projekt waren der schriftliche Auftrag, die Auftragsbesprechung mit dem Referenten sowie weitere Projekte um die Seite http://mas-is.lima-city.de/ , welche in anderen Kursen durchgeführt wurden. Die Projektgruppe erhielt den Auftrag, ein webbasiertes Tool zu entwickeln, welches auch Bibliotheksangestellten ohne spezifische Kenntnisse von JSON-LD die Erfassung von Events ermöglicht. Das Tool soll mittels XML-File konfigurierbar sein, etwa um im Vorfeld definieren zu können, welche Mindestangaben zu den jeweiligen Events erfasst werden sollen. Die eingegebenen Daten sollen dann auf Knopfdruck in das erforderte JSON-LD Format umgewandelt werden und für die weitere Bearbeitung durch die Website-Kummel, Monti, Stucki 1 ","Praxisprojekt „#wilhelmtell“ Administration bereitgestellt werden. Die Administration kann die JSON-LD Daten auf der Website der Bibliothek veröffentlichen und diese so semantisch auszeichnen. Eine zweite, separate Projektgruppe ist verantwortlich, den Veranstaltungskalender zu entwickeln und die online gestellten JSON-LD Daten jeder Bibliothek abzugreifen. Bei Abschluss des Projektes sollen konkret folgende Komponenten vorhanden sein: Anforderungen aus Nutzersicht Anforderungen aus Entwicklersicht Intuitives webbasiertes Formular Tutorial für XML-File Das benötigte Formular ist weitestgehend selbsterklärend, einfach aufzufinden und enthält, wo nötig, ergänzende Beschreibungen. Damit weitere Formulare erstellt werden können, wird ein Tutorial zur Verfügung gestellt, welches den Aufbau des XML-Files erläutert und die zu beachtenden Regeln beinhaltet. Umfassendes Tutorial Projektdokumentation Für das Nutzung der Formulare sowie die Einbindung des JSON-LD-Datensatzes in die Website ist ein einfaches und vollständiges Tutorial vorhanden, das den Benutzer anleitet. Für Entwickler, die an einer Weiter-entwicklung des Tools interessiert sind, werden der aktuelle Stand, abgeschlossene Tasks und weitere Empfehlungen in einer Projektdokumentation festgehalten. Vollständige technische Dokumentation Damit die Weiterentwicklung des Projektes ermöglicht wird, sind technische Details, Komponenten und verwendete Technologien erläutert und definiert. Tabelle 1: Konkrete Zielsetzung für das Tool #wilhelmtell 1.2Abgrenzungen und Vorgehensweise Die Erstellung des Tools wird nicht auf rein wissenschaftlicher Basis aufgebaut. Dennoch werden bei Erstellung der gesamten Website inklusive des Tools wissenschaftliche Prinzipien wie bspw. die der Usability berücksichtigt. Für die Erarbeitung des Tools wurde von der Projektgruppe ein agiler Ansatz gewählt. Dabei werden die einzelnen Phasen in mehreren Durchläufen abgehandelt. Dieses Vorgehen ermöglicht dem Team, immer wieder Rücksprache mit dem Auftraggeber zu nehmen und dessen Wünsche, Ideen und Anforderungen aufzufassen. Durch die Integration neuer Komponenten kann das Tool schrittweise entwickelt und ausgebaut werden. Neben der Startphase, welche die Prüfung der genauen Aufgabenstellung beinhaltet, wurde das Projekt in drei weitere Phasen aufgeteilt. Die Projektdokumentation zieht sich über das gesamte Projekt und soll stetig erarbeitet werden. 2 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ Abbildung 1: Phasenplanung für die Umsetzung des Tools #wilhelmtell (eigene Darstellung)  Phase 1: Entwicklung der Anwendung In der ersten Phase des Projektes wird das Tool auf rein technischer Ebene realisiert. Ziel dieser Phase ist ein funktionierendes Formular sowie eine erste grobe Zusammenstellung technischer Details.  Phase 2: Erarbeitung des Layouts Sobald die erste Version eines vollständigen Formulars existiert und keine grossen Änderungen mehr anstehen, wird das Layout für die gesamte Website erarbeitet. Das Design soll einfach, aber ansprechend sein und den Prinzipien von Usability und User Experience folgen.  Phase 3: Erstellung der Tutorials In der letzten Phase geht es um das Verfassen der Anleitungen für Endnutzer und Entwickler. Die Tutorials werden zum Schluss erstellt, da diese im Zusammenhang mit eigenen „Live-Tests“ erstellt und zugleich mit hilfreichen, optisch finalen Screenshots versehen werden können. 1.3Hinweise zur Dokumentation Text-Abschnitte, die mit einem gekennzeichnet sind, beziehen sich auf Literatur und theoretische Ansätze. Die dazugehörigen Quellenangaben finden sich dementsprechend in Kapitel 8 Quellenverzeichnis. Wann immer von Ordnern die Rede ist, sind die Ordner im Code-Repository gemeint, welches unter anderem via [GitHub unter LINK] abgerufen werden kann. Kummel, Monti, Stucki 3 ","Praxisprojekt „#wilhelmtell“ 2 Personas und Use Case xxx 2.1Persona 1 Name Martha Brinner Alter 32 Jahre Beruf Leiterin Bibliothek PFH Graubünden Kurzbeschreibung Interessiert, ambitioniert, fokussiert Zitat „Ich möchte Leben in meine Bibliothek bringen. Ich bin mir sicher, wenn wir unsere Veranstaltungen richtig publik machen, dann ist auch eine Bibliothek heutzutage nicht von gestern“ Ziele  Events der Bibliothek veröffentlichen  Dazu möglichst einfaches Tool finden Hindernisse  Warum ihre Events auf Google nicht gelistet werden versteht sie nicht  Tutorials und Artikel zu dem Thema sind meist kompliziert und nicht wirklich zielführend Personalität Martha ist eher nachdenklich und möchte sicher sein, bevor sie einen neuen Schritt wagt. Ihre Intuition spielt dabei eine grosse Rolle: Sie ist davon überzeugt dass sie in ihrem Beruf etwas bewegen kann wenn sie alles richtig macht. Martha handelt eher nach Bauchgefühl, weil das meistens stimmt. Sie geht allerdings auch an viele Fachkonferenzen, um sich nach Erfahrungen der anderen zu erkunden. Anforderungen Als Nutzer von #wilhelmtell möchte ich  erfahren können, wie ich meine Events für Google sichtbar machen kann  eine Veranstaltungsreihe erstellen können  eine einzelne Veranstaltung erstellen können  den Code einfach kopieren können  erfahren können, wie ich den Code auf meiner Website einbinden kann 4 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ Tabelle 2: Persona 1 - Martha Brinner 2.2Persona 2 Name Räto Tschupp Alter 21 Jahre Beruf Student Information Science HTW Chur Kurzbeschreibung genau, fokussiert, pragmatisch Zitat „Das Studium an der HTW ist super. Durch die praxisnähe habe ich die möglichkeit „Real-Life-Problems“ zu lösen. Vor allem dass ich auch lerne zu entwickeln gibt mir gute Chancen am Arbeitsmarkt.“ Ziele  Gute Noten  Zielgerichtet Programmier-Kenntnisse erweitern Hindernisse  Für manche Technologien wie z.B. Semantic Web sind nicht immer gute Tutorials vorhanden  Der Rechercheaufwand ist oftmals hoch Personalität Räto redet gerne über seine neusten Coding Experiences. Er schaut sich sehr gerne kurze Online-Tutorials an oder trägt zur Community auf Stackoverflow durch zahlreiche Code-Reviews bei. Dadurch möchte er seine Erfahrung als Entwickler maximieren, um später eine Entwicklerstelle bei Google zu ergattern. Für Räto sind die meisten Dinge schnell klar und er hält sich nicht gerne auf schlechten oder kompliziert gebauten Seiten auf – für ihn sind Fakten wichtig. Anforderungen Als Entwickler von #wilhelmtell möchte ich  wissen, wie ich neue Templates erstellen kann  wissen, wie meine XML-Files am besten aufgebaut werden  meine XML-Files validieren  dem Projekt neue Templates hinzufügen können Tabelle 3: Persona 2 - Räto Tschupp Kummel, Monti, Stucki 5 ","Praxisprojekt „#wilhelmtell“ 2.3Use Case Abbildung 2: Erstellen von JSON-LD-Code via Formular 6 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ 3 Komponenten des Tools Nach ersten technischen Entwicklungsschritten und vor Überlegungen zum Design wurden die einzelnen Elemente des Projektes aufgegriffen und unterteilt in Endnutzer (EN) wie den Bibliotheksmitarbeitenden und Professionals bzw. Profis (PRO), welche das Tool weiterentwickeln könnten. Entstanden ist eine Unterteilung in drei Hauptkomponenten (s. Anhang A – Komponenten des Tools), welche nachfolgend erläutert werden. 3.1Formular Kern des Projektes ist ein Formular, das in erster Linie Veranstaltungen von Bibliotheken abdeckt. Nach Ausfüllen durch den Nutzer soll per Knopfdruck ein JSON-LD-Datensatz generiert werden, welcher dann in die Website eingebunden werden kann. Mit der Einbindung des JSON-LD-Datensatzes wird die Website hinsichtlich der Veranstaltungstermine semantisch ausgezeichnet, die Bedeutung der Inhalte also auch für andere Programme und Suchmaschinen verständlich. Das Formular bietet für Nutzer den Vorteil, dass sie keine Kenntnisse von schema.org oder JSON-LD benötigen, sondern lediglich mit ihrem CMS und der Einbindung von script-Tags in den <head>-Teil der Website vertraut sein sollten. 3.2Tutorial Als Unterstützung für die Endnutzer wird ein Tutorial zur Verfügung gestellt. Dieses erläutert dem Nutzer schrittweise, wie er das Formular auszufüllen hat und wie der JSON-LD-Datensatz in die eigene Website integriert werden kann. Da die Formulare in den Sprachen Deutsch, Englisch, Französisch und Italienisch zur Verfügung stehen, wird auch das Tutorial übersetzt. Dadurch wird Nutzern aus allen Regionen der Schweiz und darüber hinaus die Anwendung des Tools erleichtert. 3.3Entwickler Ein Grundgedanke des Projektes ist die Weiterentwicklung des Tools, weshalb dies der umfassendste Bereich darstellt. Bei der Entwicklung wird unterschieden zwischen der Erstellung neuer Formulare und der Erweiterung der Plattform. Im Entwickler-Bereich finden sich Anleitungen und Anweisungen für die Formulare, der Source Code für das Tool (beschränkt auf JS und XSLT) sowie die hier vorliegende Projektdokumentation mit den technischen Details, welche im nächsten Kapitel 4 folgen. 3.3.1 XML-Tutorial und Validator Damit zukünftig neue Formulare erstellt werden können, wird ein Tutorial für Entwickler angeboten. In dieser Anleitung wird aufgezeigt: Kummel, Monti, Stucki 7 ","Praxisprojekt „#wilhelmtell“  wie das XML-File für ein neues Formular aufgebaut sein muss  welche Elemente und Attribute Verwendung finden (obligatorisch oder optional)  wo die Datei auf dem Server abgelegt werden muss  wie das File validiert werden kann Für die Validierung wird ein eigener Bereich zur Verfügung gestellt. Die Grundidee der vorgängigen Validierung der Files ist die Sicherstellung, dass ein XML-File korrekt für das Bibliothekspersonal aufbereitet wird und anschliessend ohne Komplikationen genutzt werden kann. Die Verfasser der XML-Files laden diese hierfür in das separate Verzeichnis „xmltovalidate“ auf den Server. Danach können sie auf einfache Art und Weise das hochgeladene XML-File via 770695-1.web1.fh-htwchur.ch/validate validieren. Wenn bei der Validierung keine Fehler entdeckt werden, kann der Entwickler das validierte File auf Knopfdruck veröffentlichen. Das File wird dabei serverseitig in das Verzeichnis „xml“ kopiert und somit für den eigentlichen JSON-LD Prozess zur Verfügung gestellt. Das XML-File wird 4-Stufig validiert:  1. Stufe - Fehler Prüfung ob das XML-File den Anforderungen gemäss XSD entspricht. Erfolgt serverseitig via PHP default XML-XSD Validierungsfunktion.  2. Stufe - Fehler Prüfung nach Logik-Fehlern wie bspw. Check, dass bei als sichtbar konfigurierten Labels auch ein Wert für die Labels mitgegeben wird. Erfolgt serverseitig via XPath-Abfragen.  3. Stufe - Warnung Es wird eine Warnung ausgegeben, falls nicht alle Elemente eine @type-Annotation besitzen.  4. Stufe - Info Ein Info-Text wird ausgegeben, falls nicht alle Elemente eine @id-Annotation besitzen. Wie bei Validierungen üblich, gibt es verschiedene Schweregrade. Stufe 1 und 2 haben den Schweregrad Fehler (Error). Das XML-File kann dann nicht für das Bibliothekspersonal zur Verfügung gestellt werden. Stufe 3 hat den Schweregrad Warnung (Warning). Dabei wird der validierenden Person nahegelegt, eine Korrektur vorzunehmen, das XML-File kann aber trotzdem verfügbar gemacht werden. Stufe 4 hat den Schweregrad Info. Es wird lediglich eine Zusatzinfo angezeigt, wie sich das XML-File noch verbessern liesse, das XML-File kann aber ohne weiteres publiziert werden. Jede angezeigte Meldung enthält eine Zusammenfassung des Fehlers und die entsprechende Zeilennummer im XML-File. 8 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ 3.3.2 Source Code Dokumentation (JavaScript und XSLT) Die Dokumentation des Source Codes umfasst sämtliche Files aus dem Code-Ordner „js“ und beschränkt sich dadurch auf JavaScript und XSLT. Grundlage für die Zusammenstellung waren die Kommentare im Source Code, für die Erstellung wurde JSDoc zu Hilfe gezogen. JSDoc ist eine Programmschnittstelle (auch API genannt) für JavaScript, mit der aus Programmcode automatisch eine Dokumentation generiert werden kann. Durch klares Kennzeichnen des zu dokumentierenden Codes mittels /** und der Vergabe von Tags wird dem JSDoc-Parser ermöglicht, Kommentare im Quellcode zu erkennen, zuzuordnen und zusammengefasst in einer eigenen Website im HTML-Format wiederzugeben (JSDoc 3 2017). Die Sequenzen für die Source Code Dokumentation wurden vor den entsprechenden JavaScript-Functions definiert. Weitere erläuternde Kommentare im Source Code wurden auskommentiert und werden nicht separat in der Dokumentation aufgeführt. 770695-1.web1.fh-htwchur.ch/doc 3.3.3 Projektdokumentation und technische Details Gemäss Absprache mit dem Auftraggeber ist die Projektdokumentation vor allem für die wissenschaftliche Weiterführung des Projektes relevant. Aus diesem Grund soll die hier vorliegende Dokumentation aufzeigen, auf welche Ausgangslage dem Projekt zugrunde liegt, welche Entscheidungen getroffen wurden und was für eine Weiterführung speziell zu berücksichtigen ist. Entscheidungen zu technischen Details hinsichtlich Design und genutzter Technologien werden im nächsten Kapitel genauer ausgeführt und sind insbesondere für Personen von Bedeutung, welche das Tool weiter ausbauen möchten. Kummel, Monti, Stucki 9 ","Praxisprojekt „#wilhelmtell“ 4 Entscheidungsgrundlagen für Aufbau und Design In den nachfolgenden Abschnitten wird erläutert, auf welcher Grundlage die Entscheidungen für das Design gefällt wurden und welche Technologien für die Umsetzung des Projektes verwendet wurden. 4.1Entscheidungen betreffend Design Das Design für die Repräsentation des Tools wurde ausgehend von den definierten und im vorausgehenden Kapitel erläuterten Komponenten entwickelt. Um diese an einem Ort zu vereinen und damit unter anderem eine einfache Weiterentwicklung zu gewährleisten, wurde entschieden, eine umfassende Website zu erstellen. Anhand einer ersten Skizze wurde der Aufbau der Seite definiert, der sowohl den Endnutzern bzw. dem Bibliothekspersonal gerecht werden soll, als auch den Entwicklern, welche dieses Projekt weiterführen möchten. Abbildung 3: Skizze des Aufbaus der Website Um die Nutzung der Formulare für Anwender zu erleichtern, wird das Portal aufgeteilt in einen zentralen Anwendungsbereich für Endbenutzer sowie in einen abgegrenzten und klar erkennbaren Entwicklerbereich, in der Skizze rot und grün gekennzeichnet. Der Bereich für die Endnutzer beinhaltet die beiden roten Menüpunkte und umfasst einerseits die Seite mit den Formularen sowie andererseits die Seite mit dem Tutorial. Dadurch wird gewährleistet, dass die Formulare schnell auffindbar sind und ohne Umwege genutzt werden können, die Nutzer aber dennoch über die Existenz eines Tutorials Bescheid wissen und bei Problemen schnell darauf zugreifen können. Der Entwicklerbereich ist für den Endnutzer nicht relevant und kann problemlos ignoriert werden. Für die Verantwortlichen, die sich mit der Weiterentwicklung des Projektes beschäftigten, soll jedoch eine gute Basis zur Verfügung gestellt werden. Der Bereich 10 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ wiederum ist aufgeteilt in drei Unterbereiche, welche bereits in Abschnitt 3.3 Entwickler genauer definiert wurden. Für die Umsetzung des Frontend der Website und die Darstellung der Elemente wurde auf Bootstrap 3 gesetzt. Auf Bootstrap 4 wurde bewusst verzichtet, da bei Testläufen Probleme auftraten mit Internet Explorer 11 (IE 11). 4.2Verwendete Technologien In diesem Abschnitt werden die genutzten Technologien erläutert und im Kontext des Prozesses dargestellt. Zudem wurden die Abschnitte um alternative Anwendungsmöglichkeiten ergänzt. 4.2.1 XML Ausgangslage für das Formular ist ein XML-File, das von Experten erstellt und eingepflegt wird. Das File definiert, welche Inhalte via #wilhelmtell von dem Bibliothekspersonal erfasst werden sollen. Die Auszeichnungssprache XML dient der Speicherung sowie dem Transport von Daten. (hier XML beschreiben) XForms (Schritt weiter, da auch Prozesse definiert werden können, die hinter den Elementen stehen) Sinnvoll, XForms kurz zu erwähnen (als Alternative aufzeigen). Nutzung nicht zwingend, aber sicher in Doku aufnehmen XForms-Toolkit: http://xforms-toolkit.org/ XForms Projekt: http://savannah.nongnu.org/projects/xforms/$ https://de.wikipedia.org/wiki/XForms https://www.w3.org/TR/xforms/ https://www.w3.org/community/xformsusers/wiki/XForms_2.0 4.2.2 XSD Das vorgängig definierte XML-File wird auf den Server, in den Ordner xmltovalidate hochgeladen und kann danach maschinell validiert. Die Validierung erfolgt mittels XML-Schema (XSD) Verifikation. XSD… (hier XSD beschreiben, anschliessend Validierung erläutern) Kummel, Monti, Stucki 11 ","Praxisprojekt „#wilhelmtell“ Neu gibt es auch eine Validierung für das XSD auf http://770695-1.web1.fh-htwchur.ch/validatexml.html Allfällige Fehler bei der Validierung werden direkt über die Validierungsmaske ausgegeben. 4.2.3 XSLT XML-Files, welche die Validierung erfolgreich durchlaufen haben und anschliessend publiziert wurden, können von dem User in der Formular-Maske ausgewählt werden. Beim Anwählen, wird das selektierte XML-File in HTML umgewandelt. Diese Umwandlung erfolgt mittels automatisierter XSL Transformation (XSLT). (hier XSLT erläutern) 4.2.4 HTML5 Nach erfolgter Transformation steht dem User eine einfache und verständliche Eingabemaske bzw. ein Formular zur Verfügung. In das Formular können nun alle erforderlichen und relevanten Daten für eine Veranstaltung eingegeben werden. Formular wird via HTML dargestellt. (hier HTML5 erläutern) Für die gestalterische Bearbeitung des Formulars ist zu berücksichtigen, dass keine HTML-Elemente hinzugefügt werden können, die sich statisch auf die IDs von anderen HTML-Elementen beziehen. Da alle Elemente geklont werden können und bei einem solchen Vorgang die IDs neu generiert werden, wird die Referenzierung auf statische IDs erheblich erschwert. 4.2.5 JavaScript Hat der User alle relevanten Daten eingegeben, kann die Transformation zu JSON-LD durchgeführt werden. Hierzu klickt der User auf den entsprechenden Button (JSON erzeugen), woraufhin die eingepflegten Daten mittels JavaScript in das JSON-LD Format übertragen werden (hier JS erläutern) Es gibt ein JS-File mit Helferklassen anhand dessen die Attribute aller relevanten Elemente via diese Helferklassen bearbeitet werden können. Zusätzlich kann man in dem JS-File auch die Texte bzw. Error-Messages anpassen. Das JS-File heisst formattingHelper.js. , die Nutzung wurde, wo sinnvoll, mit Anwendungsbeispielen verdeutlicht, sollte aber grundsätzlich selbsterklärend sein. 12 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ 4.2.6 JSON-LD Der JSON-LD-Datensatz wird dem User in einem separaten Ausgabefeld angezeigt. Diese kann der User abspeichern oder kopieren und den IT-Experten bzw. Administratoren zur Veröffentlichung auf der Website der Bibliothek aushändigen. JavaScript Object Notation for Linked Data, kurz JSON-LD ist eine Annotation für Daten, die automatisiert verarbeitet werden sollen und bildet damit unter anderem eine Grundlage für die semantische Auszeichnung von Websites. JSON-LD hat gegenüber Mikrodaten, RDFa, etc. einige Vorteile. Einerseits ist ein JSON-LD-Datensatz kompakter und für Menschen leichter lesbar, andererseits ist keine konkrete Unterstützung durch Content Management Systeme erforderlich, da der Datensatz einfach mittels separatem script-Tag in den Header integriert werden kann (Ryte GmbH, o.J.). Bei der Generierung des JSON-LD Textes im Tool #wilhelmtell ist zu berücksichtigen, dass alle leeren Objekte vor dem Anzeigen gelöscht werden. Das, damit nur relevante Attribute angezeigt werden. Leer definiert sich hier als leeres Array, leeres Objekt oder als Objekt mit nichts ausser einem default @type-Attribut. 4.3Technische Details Die folgenden Abschnitte gehen auf weitere notwendige technische Details ein und erläutern unter anderem, welche Browser das Tool unterstützen, welcher Server benötigt wird und was es in Bezug auf das Formular bzw. einzelne Felder zu berücksichtigen gibt. 4.3.1 Browser-Support Unterstützt werden alle Browser, die JavaScript ECMAScript 5 unterstützen, also mindestens alle gängigen Browser der aktuellen und letzten Version. IE 9 und darunter konnten nicht zuverlässig getestet werden, es wird aber davon ausgegangen, dass diese Probleme machen könnten. Es wird geraten, jede Änderung im Tool insbesondere darauf zu testen, ob sie mit IE11 funktioniert. 4.3.2 Serverseitige Tasks (PHP) Alle serverseitigen Aufgaben erfolgen via PHP Script, weshalb das Tool auf einem PHP-Server laufen muss. PHP Version 5 und darüber werden problemlos unterstützt, Versionen darunter wurden nicht getestet. Folgende Tasks erfolgen serverseitig:  XSD-Validierung  Fetching 1 der Währungen  Fetching und maschinelle Übersetzung von schema.org-Beschreibungen  Fetching der XML-Files auf dem Server 1 Hiermit ist das „Abholen“ der Daten gemeint. Kummel, Monti, Stucki 13 ","Praxisprojekt „#wilhelmtell“ Währungs- und Schema.org-Fetch haben einen Fallback auf die lokale Datei im Ordner „local-bak“ (im Ordner „php“), falls die remote-Files nicht verfügbar wären. Der Order „local-bak“ ist also relevant und sollte so belassen werden wie er ist. Der Rest der Funktionen erfolgt clientseitig in JS. 4.3.3 Besonderheiten des Formulars Für das Formular, welches dem Endnutzer angezeigt wird, gibt es einige Spezialitäten. Diese sind auch bei der Weiterentwicklung zu berücksichtigen.  Validierung der Eingabefelder Die Eingabemaske wird auf zwei verschiedene Arten validiert: Pflichtfelder werden für alle Browser ausser für IE mittels Standard HTML5 Validierung gemacht. Diese ist jeweils immer in der Systemsprache des Users. Das bedeutet, dass bei Systemsprache Deutsch eine Meldung in Deutsch ausgegeben wird, auch wenn für das Formular die Sprache Französisch (FR) ausgewählt wurde. Da die HTML5 Validierung im IE nicht funktioniert, wurde diesen eine eigene Validierung inkl. Popups entwickelt. Diese Popups sind dann entsprechend in der Sprache, welche im Formular eingestellt wurde. Das Format wird mittels regex überprüft und via Bootstrap Elemente angezeigt. Hier ist zu beachten, dass bei Drücken des „JSON-erzeugen“-Buttons geprüft wird, ob noch Fehlermeldungen zum Format bestehen. Sollen die Format-Fehlermeldungen angepasst werden, muss dies auch bei der „finalen“ Prüfung vor der JSON-LD-Generierung mitberücksichtigt werden.  Datumsfelder Alle Datumsfelder werden live an die Zeitzone des Users angepasst. Wenn im XML-Template beispielsweise der Default-Wert Zeitzone US-Ostküste gespeichert ist, wird das Datum beim Aufrufen in die lokale Zeit konvertiert.  Delete-Buttons Jedes Node-Element kann mit einem Klick auf den „löschen“-Button gelöscht. Pflichtelemente können nur solange gelöscht werden, wie es mehr als ein gleiches Element gibt. Das letzte Pflichtelement kann nicht gelöscht werden. 14 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ 5 Ergebnis des Projektes Die in Kapitel 5.1Zielerreichung „Anforderungen aus Nutzersicht“ Die angenommenen Anforderungen aus Nutzersicht konnten im Rahmen der Einfachheit gut abgedeckt werden.  Intuitives webbasiertes Formular Text  Umfassendes Tutorial Text 5.2Zielerreichung „Anforderungen aus Entwicklersicht“ Text  Tutorial für XML-File Text  Projektdokumentation Text  Vollständige technische Dokumentation Text Kummel, Monti, Stucki 15 ","Praxisprojekt „#wilhelmtell“ 6 Erweiterungsideen und Empfehlungen Das entwickelte Tool hat weiteres Potential für Weiterentwicklungen. Erste Ideen und Empfehlungen werden nachfolgend aufgeführt. Dabei wird unterschieden zwischen funktionaler Weiterentwicklung und der Optimierung des Layouts. 6.1Funktionale Erweiterungen Die gesamte Website ist, soweit möglich, responsive und damit Smartphone-freundlich aufgebaut. Dies mit dem Hintergedanken, dass beispielsweise Bibliotheksmitarbeitende das Formular auch dann ausfüllen können, wenn sie unterwegs bzw. nicht an einem stationären Computer sind. Damit der JSON-LD-Datensatz dennoch schnellstmöglich von den Administratoren in die Website eingepflegt werden kann, bietet es sich an, das Formular um einen E-Mail-Versand zu erweitern. Per Knopfdruck soll der Datensatz in eine E-Mail kopiert und versandt werden können. Eine weitere Möglichkeit, den generierten Datensatz schnell verschicken oder in die Website einpflegen zu können, ist die Speicherung in der Zwischenablage. Mit einem Button „In Zwischenablage speichern“ kann dafür gesorgt werden, dass der gesamte Datensatz mit einem Klick zur Weiterverarbeitung gesichert wird. Dadurch werden den Bibliotheksmitarbeitenden die Schritte des Markierens sowie des Kopierens erspart. Für weitere Zeitersparnis könnte eine Upload-Funktion integriert werden. Diese soll den Bibliotheksmitarbeitenden ermöglichen, alte Datensätze erneut ins Formular zu laden um dann beispielsweise nur geringfügige Änderungen im Formular vorzunehmen. Vergangene Events, die sich in den Folgejahren ähnlich wiederholen, könnten im JSON-LD-Format gesichert und zukünftig erneut, mit wenigen Anpassungen, verwendet werden. Diese Funktionalität erspart den Bibliotheksmitarbeiten das erneute komplette Ausfüllen des Formulars. 6.2Ideen für Design-Optimierungen -Kachel mit Formularsammlung statt Seitennavi mit Auflistung (Seitennavi nicht Mobile-Friendly, ausklappbare Liste statt Dropdown) -Stylesheet für 3 Hierarchien (root node, node, sub node) in XML-Klassen hinzufügend und entsprechend in Doku referenzieren 6.3Empfehlungen für die Dokumentation -Tutorial JSON-LD-Einbindung, falls kein eigenes CMS-Tutorial existiert -Übersetzungen optimieren Links zu Tutorials für CMS (mögliche) -https://codeable.io/how-to-import-json-into-wordpress/ -https://wordpress.org/plugins/insert-headers-and-footers/ 16 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ 7 Reflexion des Projektes und Ausblick xxx Kummel, Monti, Stucki 17 ","Praxisprojekt „#wilhelmtell“ 8 Quellenverzeichnis JSDoc 3 (2017): @use JSDoc. JSDoc 3 documentation project. Verfügbar unter: http://usejsdoc.org/index.html [31.12.2017]. Ryte GmbH (o.J.): Ryte Wiki: JSON-LD. Verfügbar unter: https://de.ryte.com/wiki/JSON-LD [21.01.2018]. Probst, Gilbert; Raub, Steffen; Romhardt, Kai (2012): Wissen managen. Wie Unternehmen ihre wertvollste Ressource optimal nutzen . (7. Auflage). Wiesbaden: Springer. Wertheimer, Max (1923): Untersuchungen zur Lehre von der Gestalt . II. Psychologische Forschung, 4(1), 301-350. Vermerk: Die Quellen bzw. Links zu technischen Details wie beispielsweise Libraries wurden für eine bessere Auffindbarkeit direkt in die Fusszeilen geschrieben, obschon dies nicht dem verlangten APA-Stil entspricht. 9 Abgabeverzeichnis Abgegeben werden folgende Ordner bzw. Dokumente: 1) Das Repository - #WillhelmTell (verfügbar via „github-link“ ) 2) Link zur Website 3) Projektdokumentation im PDF-Format 18 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ 10Anhang Anhang A – Komponenten des Tools Gliederung der einzelnen Projektelemente und deren Zuordnung an Endnutzer (EN) und Professionals (PRO) Abbildung 4: Definition Projektelemente und Zuordnung EN/PRO Anhang B – Erste Entwürfe Kummel, Monti, Stucki 19 ","Praxisprojekt „#wilhelmtell“ 20 Kummel, Monti, Stucki ","Praxisprojekt „#wilhelmtell“ Anhang C – xxx xxx Kummel, Monti, Stucki 21 ","Praxisprojekt „#wilhelmtell“ Erklärung Wir erklären hiermit, dass wir diese Arbeit selbstständig verfasst und keine anderen als die angegebenen Quellen und erlaubten Hilfsmittel benutzt haben. Alle Stellen, die wörtlich oder sinngemäss aus Quellen entnommen worden sind, haben wir als solche gekennzeichnet. Uns ist bekannt, dass andernfalls die Hochschulleitung zum Entzug der aufgrund unserer Arbeit verliehenen Qualifikation oder des für unsere Arbeit verliehenen Titels berechtigt ist. Chur, 16.02.2018 Hanna Kummel Ort, Datum Unterschrift Chur, 16.02.2018 Stefano Monti Ort, Datum Unterschrift Chur, 16.02.2018 Monika Stucki Ort, Datum Unterschrift 22 Kummel, Monti, Stucki "]